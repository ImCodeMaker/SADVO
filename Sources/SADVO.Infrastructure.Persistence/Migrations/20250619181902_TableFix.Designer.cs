// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SADVO.Infrastructure.Persistence.Contexts;

#nullable disable

namespace SADVO.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(SADVODbContext))]
    [Migration("20250619181902_TableFix")]
    partial class TableFix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SADVO.Core.Domain.Entities.AlianzasPoliticas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("EstadoAlianza")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaRespuesta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime2");

                    b.Property<int>("PartidoDestinoId")
                        .HasColumnType("int");

                    b.Property<int>("PartidoSolicitanteId")
                        .HasColumnType("int");

                    b.Property<int?>("PartidosPoliticosId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PartidoDestinoId");

                    b.HasIndex("PartidoSolicitanteId");

                    b.HasIndex("PartidosPoliticosId");

                    b.ToTable("AlianzasPoliticas", (string)null);
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.AsignacionCandidatos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CandidatoId")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaAsignacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("PartidoPoliticoId")
                        .HasColumnType("int");

                    b.Property<int?>("PartidoRespaldaId")
                        .HasColumnType("int");

                    b.Property<int?>("PartidosPoliticosId")
                        .HasColumnType("int");

                    b.Property<int>("PuestoElectivoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CandidatoId");

                    b.HasIndex("PartidoPoliticoId");

                    b.HasIndex("PartidoRespaldaId");

                    b.HasIndex("PartidosPoliticosId");

                    b.HasIndex("PuestoElectivoId");

                    b.ToTable("AsignacionCandidatos", (string)null);
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.AsignacionDirigentes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaAsignacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("PartidoPoliticoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PartidoPoliticoId");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("AsignacionDirigentes", (string)null);
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.Candidatos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PartidoName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartidoPoliticoId")
                        .HasColumnType("int");

                    b.Property<int?>("PartidosPoliticosId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PartidoPoliticoId");

                    b.HasIndex("PartidosPoliticosId");

                    b.ToTable("Candidatos", (string)null);
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.Ciudadanos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Documento_Identidad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Documento_Identidad")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Ciudadanos", (string)null);
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.Elecciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Estado")
                        .HasMaxLength(50)
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFinalizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRealizacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Elecciones", (string)null);
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.HistorialVotaciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CiudadanoId")
                        .HasColumnType("int");

                    b.Property<int>("EleccionId")
                        .HasColumnType("int");

                    b.Property<bool>("EmailEnviado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaVotacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HaVotado")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CiudadanoId");

                    b.HasIndex("EleccionId");

                    b.ToTable("HistorialVotaciones", (string)null);
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.PartidosPoliticos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Siglas")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("PartidosPoliticos", (string)null);
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.PuestosElectivos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("PuestosElectivos", (string)null);
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.Usuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("NombreUsuario")
                        .IsUnique();

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.Votos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CandidatoId")
                        .HasColumnType("int");

                    b.Property<int>("CiudadanoId")
                        .HasColumnType("int");

                    b.Property<int>("EleccionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaVoto")
                        .HasColumnType("datetime2");

                    b.Property<int>("PartidoPoliticoId")
                        .HasColumnType("int");

                    b.Property<int>("PuestoElectivoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CandidatoId");

                    b.HasIndex("CiudadanoId");

                    b.HasIndex("EleccionId");

                    b.HasIndex("PartidoPoliticoId");

                    b.HasIndex("PuestoElectivoId");

                    b.ToTable("Votos", (string)null);
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.AlianzasPoliticas", b =>
                {
                    b.HasOne("SADVO.Core.Domain.Entities.PartidosPoliticos", "PartidoDestino")
                        .WithMany("AlianzasRecibidas")
                        .HasForeignKey("PartidoDestinoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SADVO.Core.Domain.Entities.PartidosPoliticos", "PartidoSolicitante")
                        .WithMany("AlianzasSolicitadas")
                        .HasForeignKey("PartidoSolicitanteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SADVO.Core.Domain.Entities.PartidosPoliticos", null)
                        .WithMany("AlianzasPoliticas")
                        .HasForeignKey("PartidosPoliticosId");

                    b.Navigation("PartidoDestino");

                    b.Navigation("PartidoSolicitante");
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.AsignacionCandidatos", b =>
                {
                    b.HasOne("SADVO.Core.Domain.Entities.Candidatos", "Candidato")
                        .WithMany("Asignaciones")
                        .HasForeignKey("CandidatoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SADVO.Core.Domain.Entities.PartidosPoliticos", "PartidosPoliticos")
                        .WithMany("AsignacionesCandidatos")
                        .HasForeignKey("PartidoPoliticoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SADVO.Core.Domain.Entities.PartidosPoliticos", "PartidoQueRespalda")
                        .WithMany()
                        .HasForeignKey("PartidoRespaldaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SADVO.Core.Domain.Entities.PartidosPoliticos", null)
                        .WithMany("AsignacionCandidatos")
                        .HasForeignKey("PartidosPoliticosId");

                    b.HasOne("SADVO.Core.Domain.Entities.PuestosElectivos", "puestosElectivos")
                        .WithMany("AsignacionesCandidatos")
                        .HasForeignKey("PuestoElectivoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Candidato");

                    b.Navigation("PartidoQueRespalda");

                    b.Navigation("PartidosPoliticos");

                    b.Navigation("puestosElectivos");
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.AsignacionDirigentes", b =>
                {
                    b.HasOne("SADVO.Core.Domain.Entities.PartidosPoliticos", "PartidoPolitico")
                        .WithMany("Dirigentes")
                        .HasForeignKey("PartidoPoliticoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SADVO.Core.Domain.Entities.Usuarios", "Usuario")
                        .WithOne("AsignacionDirigente")
                        .HasForeignKey("SADVO.Core.Domain.Entities.AsignacionDirigentes", "UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PartidoPolitico");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.Candidatos", b =>
                {
                    b.HasOne("SADVO.Core.Domain.Entities.PartidosPoliticos", "PartidoPolitico")
                        .WithMany()
                        .HasForeignKey("PartidoPoliticoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SADVO.Core.Domain.Entities.PartidosPoliticos", null)
                        .WithMany("Candidatos")
                        .HasForeignKey("PartidosPoliticosId");

                    b.Navigation("PartidoPolitico");
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.HistorialVotaciones", b =>
                {
                    b.HasOne("SADVO.Core.Domain.Entities.Ciudadanos", "Ciudadano")
                        .WithMany("HistorialVotaciones")
                        .HasForeignKey("CiudadanoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SADVO.Core.Domain.Entities.Elecciones", "Eleccion")
                        .WithMany("HistorialVotaciones")
                        .HasForeignKey("EleccionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ciudadano");

                    b.Navigation("Eleccion");
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.Votos", b =>
                {
                    b.HasOne("SADVO.Core.Domain.Entities.Candidatos", "Candidato")
                        .WithMany()
                        .HasForeignKey("CandidatoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SADVO.Core.Domain.Entities.Ciudadanos", "Ciudadano")
                        .WithMany("Votos")
                        .HasForeignKey("CiudadanoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SADVO.Core.Domain.Entities.Elecciones", "Eleccion")
                        .WithMany("Votos")
                        .HasForeignKey("EleccionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SADVO.Core.Domain.Entities.PartidosPoliticos", "PartidoPolitico")
                        .WithMany()
                        .HasForeignKey("PartidoPoliticoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SADVO.Core.Domain.Entities.PuestosElectivos", "PuestoElectivo")
                        .WithMany("Votos")
                        .HasForeignKey("PuestoElectivoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Candidato");

                    b.Navigation("Ciudadano");

                    b.Navigation("Eleccion");

                    b.Navigation("PartidoPolitico");

                    b.Navigation("PuestoElectivo");
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.Candidatos", b =>
                {
                    b.Navigation("Asignaciones");
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.Ciudadanos", b =>
                {
                    b.Navigation("HistorialVotaciones");

                    b.Navigation("Votos");
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.Elecciones", b =>
                {
                    b.Navigation("HistorialVotaciones");

                    b.Navigation("Votos");
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.PartidosPoliticos", b =>
                {
                    b.Navigation("AlianzasPoliticas");

                    b.Navigation("AlianzasRecibidas");

                    b.Navigation("AlianzasSolicitadas");

                    b.Navigation("AsignacionCandidatos");

                    b.Navigation("AsignacionesCandidatos");

                    b.Navigation("Candidatos");

                    b.Navigation("Dirigentes");
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.PuestosElectivos", b =>
                {
                    b.Navigation("AsignacionesCandidatos");

                    b.Navigation("Votos");
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.Usuarios", b =>
                {
                    b.Navigation("AsignacionDirigente")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
