@model CrearAlianzaViewModel
@{
    ViewData["Title"] = "Nueva Solicitud de Alianza";
    Layout = "_LayoutDirigente";
}

<div class="min-h-screen bg-white py-8 px-4 max-w-2xl mx-auto">
    <h1 class="text-2xl font-bold mb-2">Nueva Solicitud de Alianza</h1>
    <p class="text-gray-600 mb-6">Envía una solicitud de alianza a otro partido político</p>

    @if (!ViewData.ModelState.IsValid)
    {
        <div class="bg-red-100 border border-red-400 text-red-700 p-4 rounded mb-4">
            <strong>Errores encontrados:</strong>
            <ul class="list-disc list-inside mt-2">
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <li>@error.ErrorMessage</li>
                }
            </ul>
        </div>
    }

    <form asp-action="Create" method="post" class="space-y-6">
        @Html.AntiForgeryToken()
        <input asp-for="PartidoSolicitanteId" type="hidden" />

        <div>
            <label asp-for="PartidoDestinoId" class="block text-sm font-medium text-gray-700 mb-1">
                Partido Político
            </label>
            <select asp-for="PartidoDestinoId"
                    class="w-full px-4 py-2 border rounded focus:ring focus:border-blue-500 @(ViewData.ModelState["PartidoDestinoId"]?.Errors.Count > 0 ? "border-red-500" : "")">
                <option value="">Seleccione un partido...</option>
                @foreach (var partido in Model.PartidosDisponibles)
                {
                    <option value="@partido.Id">@partido.Nombre (@partido.Siglas)</option>
                }
            </select>
            <span asp-validation-for="PartidoDestinoId" class="text-red-500 text-sm block mt-1"></span>

            @if (!Model.PartidosDisponibles.Any())
            {
                <p class="mt-2 text-sm text-yellow-700 bg-yellow-100 p-3 rounded border border-yellow-300">
                    No hay partidos disponibles para alianza en este momento.
                </p>
            }
        </div>

        <div class="bg-blue-50 border border-blue-200 rounded p-4 text-sm text-blue-800">
            <p class="font-medium mb-2">Información importante:</p>
            <ul class="list-disc list-inside space-y-1">
                <li>Solo se muestran partidos sin solicitudes pendientes</li>
                <li>La solicitud quedará en espera de respuesta</li>
                <li>Puedes eliminarla mientras esté pendiente</li>
            </ul>
        </div>

        <div class="flex flex-col sm:flex-row sm:justify-between sm:items-center gap-4 pt-6 border-t border-gray-200">
            <a asp-action="Index"
               class="w-full sm:w-auto text-center border border-gray-300 text-gray-700 px-6 py-2 rounded hover:bg-gray-50">
                Volver
            </a>

            <button type="submit"
                    class="w-full sm:w-auto bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded font-medium transition disabled:opacity-50"
            @(Model.PartidosDisponibles.Any() ? "" : "disabled")>
                Enviar Solicitud
            </button>
        </div>
    </form>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
